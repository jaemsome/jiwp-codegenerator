<?php

class CG_ConfigurationController extends CG_Controller
{   
    protected function _GenerateCCode($model=NULL, $processor_type='')
    {
        // CONFIG1
        $config1 = '_CONFIG1(';
        $config1 .= (!empty($model->JTAG)) ? 'JTAGEN_ON' : 'JTAGEN_OFF';
        $config1 .= (!empty($model->GCP)) ? ' & GCP_ON' : ' & GCP_OFF';
        $config1 .= (!empty($model->GWRP)) ? ' & GWRP_ON' : ' & GWRP_OFF';
        $config1 .= (!empty($model->debug)) ? ' & BKBUG_ON' : ' & BKBUG_OFF';
        switch($model->EMPin)
        {
            case 0:
                $config1 .= ' & ICS_PGx1';
                break;
            case 1:
                $config1 .= ' & ICS_PGx3';
                break;
            case 2:
                $config1 .= ' & ICS_PGx2';
                break;
            case 3:
                $config1 .= ' & ICS_PGx1';
                break;
        }
        $config1 .= (!empty($model->watchDog)) ? ' & FWDTEN_ON' : ' & FWDTEN_OFF';
        $config1 .= (!empty($model->watchWin)) ? ' & WINDIS_ON' : ' & WINDIS_OFF';
        $config1 .= (!empty($model->WDTPrescale)) ? ' & FWPSA_PR128' : ' & FWPSA_PR32';
        switch($model->WDTPostscaler)
        {
            case 0:
                $config1 .= ' & WDTPS_PS1';
                break;
            case 1:
                $config1 .= ' & WDTPS_PS2';
                break;
            case 2:
                $config1 .= ' & WDTPS_PS4';
                break;
            case 3:
                $config1 .= ' & WDTPS_PS8';
                break;
            case 4:
                $config1 .= ' & WDTPS_PS16';
                break;
            case 5:
                $config1 .= ' & WDTPS_PS32';
                break;
            case 6:
                $config1 .= ' & WDTPS_PS64';
                break;
            case 7:
                $config1 .= ' & WDTPS_PS128';
                break;
            case 8:
                $config1 .= ' & WDTPS_PS256';
                break;
            case 9:
                $config1 .= ' & WDTPS_PS512';
                break;
            case 10:
                $config1 .= ' & WDTPS_PS1024';
                break;
            case 11:
                $config1 .= ' & WDTPS_PS2048';
                break;
            case 12:
                $config1 .= ' & WDTPS_PS4096';
                break;
            case 13:
                $config1 .= ' & WDTPS_PS8192';
                break;
            case 14:
                $config1 .= ' & WDTPS_PS16384';
                break;
            case 15:
                $config1 .= ' & WDTPS_PS32768';
                break;
        }
        $config1 .= ')'.PHP_EOL.PHP_EOL;
        // CONFIG2
        $config2 = '_CONFIG2(';
        $config2 .= (!empty($model->IESO)) ? 'IESO_ON' : 'IESO_OFF';
        switch($model->FNOSC)
        {
            case 0:
                $config2 .= ' & FNOSC_FRC';
                break;
            case 1:
                $config2 .= ' & FNOSC_FRCPLL';
                break;
            case 2:
                $config2 .= ' & FNOSC_PRI';
                break;
            case 3:
                $config2 .= ' & FNOSC_PRIPLL';
                break;
            case 4:
                $config2 .= ' & FNOSC_SOSC';
                break;
            case 5:
                $config2 .= ' & FNOSC_LPRC';
                break;
            case 6:
                $config2 .= ' & FNOSC_LPRC';
                break;
            case 7:
                $config2 .= ' & FNOSC_FRCDIV';
                break;
        }
        switch($model->FCKSM)
        {
            case 0:
                $config2 .= ' & FCKSM_CSECME';
                break;
            case 1:
                $config2 .= ' & FCKSM_CSECMD';
                break;
            case 2:
                $config2 .= ' & FCKSM_CSDCMD';
                break;
        }
        $config2 .= (!empty($model->OSCIOFCN)) ? ' & OSCIOFNC_ON' : ' & OSCIOFNC_OFF';
        $config2 .= (!empty($model->IOL1WAY)) ? ' & IOL1WAY_ON' : ' & IOL1WAY_OFF';
        $config2 .= (!empty($model->I2C1SEL)) ? ' & I2C1SEL_PRI' : ' & I2C1SEL_SEC';
        switch($model->POSCMD)
        {
            case 0:
                $config2 .= ' & POSCMOD_EC';
                break;
            case 1:
                $config2 .= ' & POSCMOD_XT';
                break;
            case 2:
                $config2 .= ' & POSCMOD_HS';
                break;
            case 3:
                $config2 .= ' & POSCMOD_NONE';
                break;
        }
        $config2 .= ')'.PHP_EOL.PHP_EOL;
        
        $code = '/*********************************************************'.PHP_EOL;
        $code .= ' * config.c is automatically generated by PicCodeGen.'.PHP_EOL;
        $code .= ' * Please do not change.'.PHP_EOL;
        $code .= ' *'.PHP_EOL;
        $code .= ' * To obtain a copy of PicCodeGen go to'.PHP_EOL;
        $code .= ' * http://www.kmitechnology.com/.'.PHP_EOL;
        $code .= ' *'.PHP_EOL;
        $code .= ' *********************************************************/'.PHP_EOL;
        $code .= PHP_EOL;
        $code .= $config1.$config2;
        
        return $code;
    }
}